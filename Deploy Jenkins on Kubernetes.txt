The Nautilus DevOps team is planning to setup a Jenkins CI server to create/manage some deployment pipelines for some of the projects. They want to setup the Jenkins server on Kubernetes cluster. Below you can find more details about the task:


1) Create namespace jenkins
kubectl create namespace jenkins

2) Create a Service for jenkins deployment. Service name should be jenkins-service under jenkins namespace, type should be NodePort, 
targetport should be 8080 and nodePort should be 30008

apiVersion: v1
kind: Service
metadata:
  name: jenkins-service
  namespace:  jenkins  
spec:
  type: NodePort
  selector:
    app: jenkins
  ports:
  - nodePort: 30008
    targetPort: 8080


3) Create a Jenkins Deployment under jenkins namespace, It should be name as jenkins-deployment , 
labels app should be jenkins , container name should be jenkins-container , use jenkins image, containerPort should be 8080 and replicas count should be 1.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-deployment
  namespace: jenkins
  labels:
    app: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
      - name: jenkins-container
        image: jenkins
        ports:
        - containerPort: 8080

Make sure to wait for pods to be in running state before clicking on Finish button.

Note: The kubectl utility on jump_host has been configured to work with the kubernetes cluster.

thor@jump_host /$ kubectl create namespace jenkinsnamespace/jenkins created
thor@jump_host /$ sudo vi ser.yml

We trust you have received the usual lecture from the local System
Administrator. It usually boils down to these three things:

    #1) Respect the privacy of others.
    #2) Think before you type.
    #3) With great power comes great responsibility.

[sudo] password for thor:
thor@jump_host /$ kubectl create -f ser.yml
error: error validating "ser.yml": error validating data: ValidationError(Service.spec.ports[0]): missing required field "port" in io.k8s.api.core.v1.ServicePort; if you choose to ignore these errors, turn validation off with --validate=false
thor@jump_host /$ sudo vi ser.yml
thor@jump_host /$ kubectl create -f ser.ymlservice/jenkins-service created
thor@jump_host /$ sudo vi deploy.yml
thor@jump_host /$ kubectl create -f deploy.yml
deployment.apps/jenkins-deployment created
thor@jump_host /$ kubectl get service -n jenkins
NAME              TYPE       CLUSTER-IP      EXTERNAL-IP   PORT(S)          AGE
jenkins-service   NodePort   10.110.70.141   <none>        8080:30008/TCP   74s
thor@jump_host /$ kubectl get pods -n jenkins
NAME                                  READY   STATUS    RESTARTS   AGE
jenkins-deployment-8544cd5d84-84gsj   1/1     Running   0          31s
thor@jump_host /$ kubectl get deploy -n jenkins
NAME                 READY   UP-TO-DATE   AVAILABLE   AGE
jenkins-deployment   1/1     1            1           43s
thor@jump_host /$ kubectl describe deploy -n jenkins
Name:                   jenkins-deployment
Namespace:              jenkins
CreationTimestamp:      Sun, 13 Sep 2020 16:56:55 +0000
Labels:                 app=jenkins
Annotations:            deployment.kubernetes.io/revision: 1
Selector:               app=jenkins
Replicas:               1 desired | 1 updated | 1 total | 1 available | 0 unavailable
StrategyType:           RollingUpdate
MinReadySeconds:        0
RollingUpdateStrategy:  25% max unavailable, 25% max surge
Pod Template:
  Labels:  app=jenkins
  Containers:
   jenkins-container:
    Image:        jenkins
    Port:         8080/TCP
    Host Port:    0/TCP
    Environment:  <none>
    Mounts:       <none>
  Volumes:        <none>
Conditions:
  Type           Status  Reason
  ----           ------  ------
  Available      True    MinimumReplicasAvailable
  Progressing    True    NewReplicaSetAvailable
OldReplicaSets:  <none>
NewReplicaSet:   jenkins-deployment-8544cd5d84 (1/1 replicas created)
Events:
  Type    Reason             Age   From                   Message
  ----    ------             ----  ----                   -------
  Normal  ScalingReplicaSet  59s   deployment-controller  Scaled up replica set jenkins-deployment-8544cd5d84 to 1
thor@jump_host /$ kubectl describe setrvice -n jenkins
error: the server doesn't have a resource type "setrvice"
thor@jump_host /$ kubectl describe service -n jenkins
Name:                     jenkins-service
Namespace:                jenkins
Labels:                   <none>
Annotations:              <none>
Selector:                 app=jenkins
Type:                     NodePort
IP:                       10.110.70.141
Port:                     <unset>  8080/TCP
TargetPort:               8080/TCP
NodePort:                 <unset>  30008/TCP
Endpoints:                10.44.0.1:8080
Session Affinity:         None
External Traffic Policy:  Cluster
Events:                   <none>
thor@jump_host /$ kubectl describe pods -n jenkins
Name:         jenkins-deployment-8544cd5d84-84gsj
Namespace:    jenkins
Priority:     0
Node:         node01/172.17.0.9
Start Time:   Sun, 13 Sep 2020 16:56:55 +0000
Labels:       app=jenkins
              pod-template-hash=8544cd5d84
Annotations:  <none>
Status:       Running
IP:           10.44.0.1
IPs:
  IP:           10.44.0.1
Controlled By:  ReplicaSet/jenkins-deployment-8544cd5d84
Containers:
  jenkins-container:
    Container ID:   docker://8ed20b24b31b7f3fdf3aa0c143b7f69ef9d7f18c8a5107a305f406482594a25a
    Image:          jenkins
    Image ID:       docker-pullable://jenkins@sha256:eeb4850eb65f2d92500e421b430ed1ec58a7ac909e91f518926e02473904f668
    Port:           8080/TCP
    Host Port:      0/TCP
    State:          Running
      Started:      Sun, 13 Sep 2020 16:57:24 +0000
    Ready:          True
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-2tzkm (ro)
Conditions:
  Type              Status
  Initialized       True
  Ready             True
  ContainersReady   True
  PodScheduled      True
Volumes:
  default-token-2tzkm:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  default-token-2tzkm
    Optional:    false
QoS Class:       BestEffort
Node-Selectors:  <none>
Tolerations:     node.kubernetes.io/not-ready:NoExecute for 300s
                 node.kubernetes.io/unreachable:NoExecute for 300s
Events:
  Type    Reason     Age   From               Message
  ----    ------     ----  ----               -------
  Normal  Scheduled  2m1s  default-scheduler  Successfully assigned jenkins/jenkins-deployment-8544cd5d84-84gsj to node01
  Normal  Pulling    2m    kubelet, node01    Pulling image "jenkins"
  Normal  Pulled     94s   kubelet, node01    Successfully pulled image "jenkins"
  Normal  Created    92s   kubelet, node01    Created container jenkins-container
  Normal  Started    92s   kubelet, node01    Started container jenkins-container
thor@jump_host /$ cat ser.yml
apiVersion: v1
kind: Service
metadata:
  name: jenkins-service
  namespace:  jenkins
spec:
  type: NodePort
  selector:
    app: jenkins
  ports:
  - nodePort: 30008
    targetPort: 8080
    port: 8080
thor@jump_host /$ cat deploy.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-deployment
  namespace: jenkins
  labels:
    app: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
      - name: jenkins-container
        image: jenkins
        ports:
        - containerPort: 8080

