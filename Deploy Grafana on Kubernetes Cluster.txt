The Nautilus nautilus teams is planning to set up a Grafana tool to collect and analyze analytics from some applications. They are planning to deploy it on Kubernetes cluster. Below you can find more details.


1.) Create a namespace for Grafana grafana-monitoring-nautilus.

2.) Create grafana-deployment-nautilus deployment the namespace you created.

a. Replica counts should be 1.

b. Container name should be grafana-container-nautilus and use grafana/grafana:latest image.

c. Container port should be 3000. Set resources limits memory to 2Gi and CPU to 1000m, requests for memory 1Gi and for CPU 500m.

d. Volume mount name should be grafana-storage. Its mountPath should be /var/lib/grafana. Volume name should be grafana-storage, should be emptyDir {}.

3.) Create grafana-service-nautilus service under the same namespace. It must be of NodePort type, its port must be 3000, target port must be 3000 and nodePort must be 32000.

You can use any labels as per your choice.

Note: The kubeclt on jump_host has been configured to work with kubernetes cluster.

kubectl create namespace grafana-monitoring-nautilus

thor@jump_host /$ cat deploy.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-deployment-nautilus
  namespace: grafana-monitoring-nautilus
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana-container-nautilus
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
        resources:
          limits:
            memory: "2Gi"
            cpu: "1000m"
          requests:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
      volumes:
      - name: grafana-storage
        emptyDir: {}
thor@jump_host /$ cat svc.yml
apiVersion: v1
kind: Service
metadata:
  name: grafana-service-nautilus
  namespace: grafana-monitoring-nautilus
spec:
  type: NodePort
  ports:
  - port: 3000
    targetPort: 3000
    nodePort: 32000
  selector:
    app: grafana
thor@jump_host /$

thor@jump_host /$ kubectl get namespace
NAME                          STATUS   AGE
default                       Active   6m49s
grafana-monitoring-nautilus   Active   4m33s
kube-node-lease               Active   6m51s
kube-public                   Active   6m51s
kube-system                   Active   6m51s
thor@jump_host /$ kubectl get deploy -n grafana-monitoring-nautilus
NAME                          READY   UP-TO-DATE   AVAILABLE   AGE
grafana-deployment-nautilus   1/1     1            1           104s
thor@jump_host /$ kubectl get svc -n grafana-monitoring-nautilus
NAME                       TYPE       CLUSTER-IP    EXTERNAL-IP   PORT(S)          AGE
grafana-service-nautilus   NodePort   10.96.15.57   <none>        3000:32000/TCP   61s