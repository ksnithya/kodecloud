A new java based application is ready to be deployed on a Kubernetes cluster. Development team had some meeting with DevOps team share requirements and application scope. 
Team is ready to setup an application stack for same under their existing cluster. Below you can find the details for the same:


Create a namespace named tomcat-namespace-datacenter.

kubectl create namespace tomcat-namespace-datacenter

Create a deployment for tomcat app which should be named as tomcat-deployment-datacenter. Replicas count should be 1, the container should be named as tomcat-container-datacenter, 
its image should be gcr.io/kodekloud/centos-ssh-enabled:tomcat and its container port should be 8080.



Create a service for tomcat app which should be named as tomcat-service-datacenter. Service type should be NodePort. port's protocol should be TCP, port should be 80, 
targetPort should be 8080 and nodePort should be 32227.

Before clicking on Finish button please make sure application is up and running.

You can use any labels as per your choice.

Note: The kubectl on jump_host has been configured to work with the kubernetes cluster.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: tomcat-deployment-datacenter
  namespace: tomcat-namespace-datacenter
  labels:
    run: tomcat-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      run: tomcat-deployment
  template:
    metadata:
      labels:
        run: tomcat-deployment
    spec:
      containers:
      - name: tomcat-container-datacenter
        image: gcr.io/kodekloud/centos-ssh-enabled:tomcat
        ports:
        - containerPort: 8080

apiVersion: v1
kind: Service
metadata:
  name: tomcat-service-datacenter
  namespace: tomcat-namespace-datacenter
spec:
  type: NodePort
  selector:
    run: tomcat-deployment
  ports:
  - protocol: TCP
    targetPort: 8080
    port: 80
    nodePort: 32227

thor@jump_host /$ cat deploy.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tomcat-deployment-datacenter
  namespace: tomcat-namespace-datacenter
  labels:
    run: tomcat-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      run: tomcat-deployment
  template:
    metadata:
      labels:
        run: tomcat-deployment
    spec:
      containers:
      - name: tomcat-container-datacenter
        image: gcr.io/kodekloud/centos-ssh-enabled:tomcat
        ports:
        - containerPort: 8080
thor@jump_host /$ cat svc.yml
apiVersion: v1
kind: Service
metadata:
  name: tomcat-service-datacenter
  namespace: tomcat-namespace-datacenter
spec:
  type: NodePort
  selector:
    run: tomcat-deployment
  ports:
  - protocol: TCP
    targetPort: 8080
    port: 80
    nodePort: 32227
thor@jump_host /$

thor@jump_host /$ kubectl create -f deploy.yml
deployment.apps/tomcat-deployment-datacenter created
thor@jump_host /$ sudo vi svc.yml
thor@jump_host /$ kubectl create -f svc.yml
service/tomcat-service-datacenter created
thor@jump_host /$ kubectl get pods -n tomcat-namespace-datacenterNAME                                            READY   STATUS    RESTARTS   AGE
tomcat-deployment-datacenter-6f9f8c4f4f-x4gqc   1/1     Running   0          73s
thor@jump_host /$ kubectl get deploy -n tomcat-namespace-datacenter
NAME                           READY   UP-TO-DATE   AVAILABLE   AGE
tomcat-deployment-datacenter   1/1     1            1           83s
thor@jump_host /$ kubectl get svc -n tomcat-namespace-datacenter
NAME                        TYPE       CLUSTER-IP     EXTERNAL-IP   PORT(S)        AGE
tomcat-service-datacenter   NodePort   10.99.210.66   <none>        80:32227/TCP   41s
thor@jump_host /$ curl 10.99.210.66:8080
^C
thor@jump_host /$ curl 10.99.210.66:80
<!DOCTYPE html>
<!--
To change this license header, choose License Headers in Project Properties.
To change this template file, choose Tools | Templates
and open the template in the editor.
-->
<html>
    <head>
        <title>SampleWebApp</title>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
    </head>
    <body>
        <h2>Welcome to xFusionCorp Industries!</h2>
        <br>

    </body>
</html>