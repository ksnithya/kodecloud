The Nautilus Application team is planning to deploy one of the php-based application on Kubernetes cluster. 
As per discussion with DevOps team they decided to use nginx and phpfpm. Additionally, they shared some custom configuration requirements. 
Below you can find more details. Please complete the task as per requirements mentioned below:


1.) Create a config map nginx-config for nginx.conf as we want to add some custom settings for nginx.conf.

a) Change default port 80 to 8096 in nginx.conf.

b) Change default document root /usr/share/nginx to /var/www/html in nginx.conf.

c) Update directory index to index index.html index.htm index.php in nginx.conf.

kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx-config
data:
  nginx.conf: |
    events {
    }
    http {
      server {
        listen 8094 default_server;
        listen [::]:8094 default_server;
        
        # Set nginx to serve files from the shared volume!
        root /var/www/html;
        index index.html index.htm index.php;
      }
    }

2.) Create a pod named nginx-phpfpm .

b) Create a shared files volume shared-files that will be used by both containers (nginx and phpfpm) also it should be emptyDir: {}

c) Map the ConfigMap we declared above as a volume for the pod. Name the volume as nginx-config-volume

d) Nginx container should be named as nginx-container and it should use nginx:latest image. PhpFPM container should be named as php-fpm-container and it should use php:7.2-fpm image.

e) The shared volume shared-files should be mounted at /var/www/html location in both containers.

f) Add one more volume for nginx-container. Name it as nginx-config-volume, mount path should be /etc/nginx/nginx.conf and subPath should be nginx.conf

kind: Pod
apiVersion: v1
metadata:
  name: nginx-phpfpm
  labels:
    app: nginx-php
spec:
  volumes:
  - name: shared-files
    emptyDir: {}
  - name: nginx-config-volume
    configMap:
      name: nginx-config

  containers:
  - image: php:7.3-fpm
    name: php-fpm-container
    volumeMounts:
      - name: shared-files
        mountPath: /var/www/html
  - image: nginx:latest
    name: nginx-container
    volumeMounts:
      - name: shared-files
        mountPath: /var/www/html
      - name: nginx-config-volume
        mountPath: /etc/nginx/nginx.conf
        subPath: nginx.conf

Before clicking on finish button always make sure to check if all pods are in running state.

You can use any labels as per your choice.

Note: The kubectl utility on jump_host has been configured to work with the kubernetes cluster.


thor@jump_host /$ kubectl get configmapNo resources found in default namespace.
thor@jump_host /$ sudo vi conf.yml

We trust you have received the usual lecture from the local System
Administrator. It usually boils down to these three things:

    #1) Respect the privacy of others.
    #2) Think before you type.
    #3) With great power comes great responsibility.

[sudo] password for thor:
thor@jump_host /$ kubectl create -f conf.yml
configmap/nginx-config created
thor@jump_host /$ kubectl get configmap
NAME           DATA   AGE
nginx-config   1      5s
thor@jump_host /$ sudo vi pod.ymlthor@jump_host /$ kubectl create -f pod.yml
error: error validating "pod.yml": error validating data: [ValidationError(Pod): unknown field "label" in io.k8s.api.core.v1.Pod, ValidationError(Pod): unknown field "name" in io.k8s.api.core.v1.Pod]; if you choose toignore these errors, turn validation off with --validate=false
thor@jump_host /$ sudo vi pod.yml
thor@jump_host /$ kubectl create -f pod.yml
error: error validating "pod.yml": error validating data: [ValidationError(Pod): unknown field "labels" in io.k8s.api.core.v1.Pod, ValidationError(Pod): unknown field "name" in io.k8s.api.core.v1.Pod]; if you choose to ignore these errors, turn validation off with --validate=false
thor@jump_host /$ sudo vi pod.yml
thor@jump_host /$ kubectl create -f pod.yml
pod/nginx-phpfpm created
thor@jump_host /$ kubectl get pods
NAME           READY   STATUS              RESTARTS   AGE
nginx-phpfpm   0/2     ContainerCreating   0          8s
thor@jump_host /$ kubectl get pods
NAME           READY   STATUS              RESTARTS   AGE
nginx-phpfpm   0/2     ContainerCreating   0          13s
thor@jump_host /$ kubectl get pods
NAME           READY   STATUS              RESTARTS   AGE
nginx-phpfpm   0/2     ContainerCreating   0          18s
thor@jump_host /$ kubectl get pods -w
NAME           READY   STATUS    RESTARTS   AGE
nginx-phpfpm   2/2     Running   0          26s
^Cthor@jump_host /$ kubectl get pods
NAME           READY   STATUS    RESTARTS   AGE
nginx-phpfpm   2/2     Running   0          36s
thor@jump_host /$ kubectl logs pod nginx-phpfpm
Error from server (NotFound): pods "pod" not found
thor@jump_host /$ kubectl logs nginx-phpfpm
error: a container name must be specified for pod nginx-phpfpm, choose one of: [php-fpm-container nginx-container]
thor@jump_host /$ kubectl logs nginx-phpfpm-container
Error from server (NotFound): pods "nginx-phpfpm-container" not found
thor@jump_host /$ kubectl get deploy
No resources found in default namespace.
thor@jump_host /$ kubectl get pods
NAME           READY   STATUS    RESTARTS   AGE
nginx-phpfpm   2/2     Running   0          119s
thor@jump_host /$ kubectl logs php-fpm-container
Error from server (NotFound): pods "php-fpm-container" not found
thor@jump_host /$ kubectl logs pod php-fpm-container
Error from server (NotFound): pods "pod" not found
thor@jump_host /$ cat pod.yml
kind: Pod
apiVersion: v1
metadata:
  name: nginx-phpfpm
  labels:
    app: nginx-php
spec:
  volumes:
  - name: shared-files
    emptyDir: {}
  - name: nginx-config-volume
    configMap:
      name: nginx-config

  containers:
  - image: php:7.2-fpm
    name: php-fpm-container
    volumeMounts:
      - name: shared-files
        mountPath: /var/www/html
  - image: nginx:latest
    name: nginx-container
    volumeMounts:
      - name: shared-files
        mountPath: /var/www/html
      - name: nginx-config-volume
        mountPath: /etc/nginx/nginx.conf
        subPath: nginx.conf
thor@jump_host /$ cat conf.yml
kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx-config
data:
  nginx.conf: |
    events {
    }
    http {
      server {
        listen 8093 default_server;
        listen [::]:8093 default_server;

        # Set nginx to serve files from the shared volume!
        root /var/www/html;
        index index.php index.html index.hml;
      }
    }
 