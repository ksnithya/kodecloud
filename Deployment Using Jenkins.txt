The Nautilus development team had a meeting with the DevOps team where they discussed automating the deployment of one of their apps using Jenkins (the one in Stratos Datacenter). They want to auto deploy the new changes in case any developer pushes to the repository. Per the requirements mentioned below configure the required Jenkins job.


Click on the + button in the top left corner and select option Select port to view on Host 1, enter port 8081 and click on Display Port. 
You should be able to access the Jenkins login page. Login using username theadmin and Adm!n321 password.

In the same way you can access Gitea UI on port 8000; username and password for Git is sarah and Sarah_pass123 respectively. There under user sarah you will find a repository named web that is already cloned on Storage server under sarah's home. sarah is a developer who is working on this repository.

Install httpd (whatever version is available in the yum repo by default) and configure it to serve on port 6000 on All App servers. 
You can make it part of your Jenkins job or you can do this step manually on all app servers.

Create a Jenkins job named nautilus-app-deployment and configure it in a way that if anyone pushes any new change to the origin repository 
on master branch the job should auto build and deploy the latest code on Storage server under /data directory. Since /data on Storage server is a NFS mount, 
changes should auto reflect on all apps.

SSH into Storage Server using sarah user credentials mentioned above. Under sarah user's home you will find a cloned Git repository named web. 
Under this repository there is an index.html file, update its content to Welcome to the xFusionCorp Industries and then push the changes to the origin into master branch. 
This push must trigger your Jenkins job and the latest changes must be deployed also make sure it deploys the entire repository content not only index.html file.

LB server is already configured. Click on the + button in the top left corner and select option Select port to view on Host 1, enter port 80 and click on Display Port. You should be able to see the latest changes you made. Please make sure the required content is loading on the main URL https://<LBR-URL> i.e there should not be a sub-directory like https://<LBR-URL>/web etc.

Note:

You might need to install some plugins and restart Jenkins service. So, we recommend clicking on Restart Jenkins when installation is complete and no jobs are running on plugin installation/update page i.e update centre. Also some times Jenkins UI gets stuck when Jenkins service restarts in the back end so in such case please make sure to refresh the UI page.

Make sure Jenkins job passes even on repetitive runs as validation may try to build the job multiple times.

Deployment related tasks should be done by sudo user on the destination server to avoid any permission issues so make sure to configure your Jenkins job accordingly.

For these kind of scenarios requiring changes to be done in a web UI, please take screenshots so that you can share it with us for review in case your task is marked incomplete. You may also consider using a screen recording software such as loom.com to record and share your work.


echo "Ir0nM@n" | sudo -S yum install httpd -y
echo "Ir0nM@n" | sudo -S sed -i 's/Listen 80[[:space:]]*$/Listen 3000 /' /etc/httpd/conf/httpd.conf
echo "Ir0nM@n" | sudo -S cat /etc/httpd/conf/httpd.conf|grep -i listen
echo "Ir0nM@n" | sudo -S systemctl start httpd
echo "Ir0nM@n" | sudo -S systemctl status httpd

echo "Am3ric@" | sudo -S yum install httpd -y
echo "Am3ric@" | sudo -S sed -i 's/Listen 80[[:space:]]*$/Listen 3000 /' /etc/httpd/conf/httpd.conf
echo "Am3ric@" | sudo -S cat /etc/httpd/conf/httpd.conf|grep -i listen
echo "Am3ric@" | sudo -S systemctl start httpd
echo "Am3ric@" | sudo -S systemctl status httpd

echo "BigGr33n" | sudo -S yum install httpd -y
echo "BigGr33n" | sudo -S sed -i 's/Listen 80[[:space:]]*$/Listen 3000 /' /etc/httpd/conf/httpd.conf
echo "BigGr33n" | sudo -S cat /etc/httpd/conf/httpd.conf|grep -i listen
echo "BigGr33n" | sudo -S systemctl start httpd
echo "BigGr33n" | sudo -S systemctl status httpd

3. Create new job with name "nautilus-app-deployment". 
Add source code from Git -> Poll sscm -> give schedule - * * * * *
Then select build -> execute sheel using ssh -> 
echo "Bl@kW" | sudo -S cp -R /home/sarah/web /tmp
echo "Bl@kW" | sudo -S cp -R /tmp/web/* /data


