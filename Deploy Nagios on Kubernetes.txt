The Nautilus DevOps teams is planning to set up a Nagios monitoring tool to monitor some applications, services etc. They are planning to deploy it on Kubernetes cluster. 
Below you can find more details.


1) Create a deployment nagios-deployment for Nagios core. The container name must be nagios-container and it must use jasonrivers/nagios image.

2) Create a user and password for the Nagios core web interface, user must be xFusionCorp and password must be LQfKeWWxWD. (you can manually perform this step after deployment)

3) Create a service nagios-service for Nagios which must be of targetPort type. Port must be 80 and nodePort must be 30008.

You can use any labels as per your choice.

Note: The kubectl on jump_host has been configured to work with the kubernetes cluster.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nagios-deployment
  labels:
    app: nagios
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nagios
  template:
    metadata:
      labels:
        app: nagios
    spec:
      containers:
      - name: nagios-container
        image: jasonrivers/nagios


2) Create a user and password for the Nagios core web interface, user must be xFusionCorp and password must be LQfKeWWxWD. (you can manually perform this step after deployment)

thor@jump_host /$ kubectl exec -it nagios-deployment-6688dfbcfd-hgdqr bash
htpasswd -c /opt/nagios/etc/htpasswd.users xFusionCorp --> its working
curl -u xFusionCorp:LQfKeWWxWD localhost

3) Create a service nagios-service for Nagios which must be of targetPort type. Port must be 80 and nodePort must be 30008.

apiVersion: v1
kind: Service
metadata:
  name: nagios-service
spec:
  type: NodePort
  ports:
  - port: 80
    nodePort: 30008
  selector:
    app: nagios

thor@jump_host /$ kubectl create -f deploy.yml
deployment.apps/nagios-deployment created
thor@jump_host /$ kubectl get pods
NAME                                 READY   STATUS    RESTARTS   AGE
nagios-deployment-6688dfbcfd-hj8s5   1/1     Running   0          64s
thor@jump_host /$ kubectl get deploy
NAME                READY   UP-TO-DATE   AVAILABLE   AGE
nagios-deployment   1/1     1            1           75sthor@jump_host /$ kubectl exec -it nagios-deployment-6688dfbcfd-hj8s5 bash
kubectl exec [POD] [COMMAND] is DEPRECATED and will be removed in a future version. Use kubectl exec [POD] -- [COMMAND] instead.
root@nagios-deployment-6688dfbcfd-hj8s5:/#
root@nagios-deployment-6688dfbcfd-hj8s5:/# htpasswd -c /opt/nagios/etc/htpasswd.users xFusionCorp
New password:
Re-type new password:
Adding password for user xFusionCorp
root@nagios-deployment-6688dfbcfd-hj8s5:/# exit
exit
thor@jump_host /$ sudo vi svc.yml
thor@jump_host /$ kubectl create -f svc.yml
service/nagios-service created
thor@jump_host /$ kubectl get svc
NAME             TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)        AGE
kubernetes       ClusterIP   10.96.0.1        <none>        443/TCP        6m46s
nagios-service   NodePort    10.101.102.235   <none>        80:30008/TCP   7s
thor@jump_host /$ kubectl get deploy
NAME                READY   UP-TO-DATE   AVAILABLE   AGE
nagios-deployment   1/1     1            1           4m31s
thor@jump_host /$ kubectl get pods
NAME                                 READY   STATUS    RESTARTS   AGE
nagios-deployment-6688dfbcfd-hj8s5   1/1     Running   0          4m41s
thor@jump_host /$ cat deploy.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nagios-deployment
  labels:
    app: nagios
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nagios
  template:
    metadata:
      labels:
        app: nagios
    spec:
      containers:
      - name: nagios-container
        image: jasonrivers/nagios
thor@jump_host /$ cat svc.yml
apiVersion: v1
kind: Service
metadata:
  name: nagios-service
spec:
  type: NodePort
  ports:
  - port: 80
    nodePort: 30008
  selector:
    app: nagios
thor@jump_host /$