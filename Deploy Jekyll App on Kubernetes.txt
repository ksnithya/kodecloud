The Nautilus development team had a discussion with DevOps team and they want to deploy a Jekyll app on Kubernetes cluster. 
They have already shared details with DevOps team, please find below more details:


Create a namespace jekyll-namespace-devops for jekyll.

kubectl create namespace jekyll-namespace-devops

PersistentVolume is already created on jump_host.

Create a PersistentVolumeClaim which should be named as jekyll-site-devops under the same namespace. accessModes should be ReadWriteMany, request 1Gi storage.

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jekyll-site-devops
  namespace: jekyll-namespace-devops
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

Create a pod named jekyll-pod-devops for jekyll. Init container should be named as jekyll-init-devops, image should be kodekloud/jekyll, 
use command as [ "jekyll", "new", "/site" ]. Its image pull policy should be IfNotPresent, volumeMount name should be site and its mountPath should be /site. 
The main container should be named as jekyll-container-devops, its image should be kodekloud/jekyll-serve, volumeMount name should be site and its mountPath should be /site. 
Volume name should be site and persistent volume claim's claim name should be jekyll-site-devops

apiVersion: v1
kind: Pod
metadata:
  name: jekyll-pod-devops
  namespace: jekyll-namespace-devops
  labels:
    app: jekyll
spec:
  containers:
  - name: jekyll-container-devops
    image: kodekloud/jekyll-serve
    volumeMounts:
    - name: site
      mountPath: /site
  initContainers:
  - name: jekyll-init-devops
    image: kodekloud/jekyll
    imagePullPolicy: IfNotPresent
    command: [ "jekyll", "new", "/site" ]
    volumeMounts:
    - mountPath: /site
      name: site
  volumes:
  - name: site
    persistentVolumeClaim:
      claimName: jekyll-site-devops

Create a service for jekyll which should be named as jekyll-container-devops under the same namespace. Port should be 8080, protocol should be TCP, its targetPort should be 4000 and
 nodePort should be 31181. Its type should be NodePort and loadbalancer status should be {}.


apiVersion: v1
kind: Service
metadata:
  name: jekyll-container-devops
  namespace: jekyll-namespace-devops
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 4000
    nodePort: 31181
  type: NodePort
  selector:
    app: lamp
status:
  loadbalancer: {}



You can use any labels as per your choice.

Note: The kubectl on jump_host has been configured to work with the kubernetes cluster.


 