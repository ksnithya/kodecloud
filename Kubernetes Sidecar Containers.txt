We have a web server container running the nginx image. The access and error logs produced by the web server are not critical 
\enough to be placed on a persistent volume. However, Nautilus developers need access to the last 24 hours of logs so they can trace issues and bugs. 
\Therefore, we need to ship the access and error logs for the web server to a log-aggregation service. Following the separation of concerns principle, 
we implement the Sidecar pattern by deploying a second container that ships the error and access logs from nginx. Nginx does one thing, and it does it well—serving web pages. 
The second container also specializes in its task—shipping logs. Since containers are running on the same Pod, we can use a shared emptyDir volume to read and write logs.


Create a pod named webserver.

Create an emptyDir volumemount name: shared-logs.

Create two containers from nginx and ubuntu images with latest tag only and remember to mention tag i.e nginx:latest, nginx container name 
should be nginx-container and ubuntu container name should be sidecar-container on webserver pod.

Add command on sidecar-container "sh","-c","while true; do cat /var/log/nginx/access.log /var/log/nginx/error.log; sleep 30; done"

Mount volume /var/log/nginx on both containers, all containers should be up and running.

Note: The kubectl utility on jump_host has been configured to work with the kubernetes cluster.


apiVersion: v1
kind: Pod
metadata:
  name: webserver
spec:
  volumes:
  - name: shared-logs
    emptyDir: {}

  containers:

  - name: nginx-container
    image: nginx:latest
    volumeMounts:
    - name: shared-logs
      mountPath: /var/log/nginx

  - name: sidecar-container
    image: ubuntu:latest
    volumeMounts:
    - name: shared-logs
      mountPath: /var/log/nginx
    command: ["/bin/sh"]
    args: ["-c", "while true; do cat /var/log/nginx/access.log /var/log/nginx/error.log; sleep 30; done"]

thor@jump_host /$ sudo vi pod.yml
We trust you have received the usual lecture from the local System
Administrator. It usually boils down to these three things:

    #1) Respect the privacy of others.
    #2) Think before you type.
    #3) With great power comes great responsibility.

[sudo] password for thor:
thor@jump_host /$ kubectl create -f pod.yml
pod/webserver created
thor@jump_host /$ kubectl get pods
NAME        READY   STATUS              RESTARTS   AGE
webserver   0/2     ContainerCreating   0          6s
thor@jump_host /$ kubectl get pods
NAME        READY   STATUS              RESTARTS   AGE
webserver   0/2     ContainerCreating   0          12sthor@jump_host /$ kubectl get pods -o wide
NAME        READY   STATUS    RESTARTS   AGE   IP          NODE     NOMINATED NODE   READINESS GATES
webserver   2/2     Running   0          21s   10.44.0.1   node01   <none>           <none>
thor@jump_host /$ kubectl describe pods -o wide
Error: unknown shorthand flag: 'o' in -o
See 'kubectl describe --help' for usage.
thor@jump_host /$ kubectl describe pods
Name:         webserver
Namespace:    default
Priority:     0
Node:         node01/172.17.0.93
Start Time:   Thu, 08 Oct 2020 14:08:19 +0000
Labels:       <none>
Annotations:  <none>
Status:       Running
IP:           10.44.0.1
IPs:
  IP:  10.44.0.1
Containers:
  nginx-container:
    Container ID:   docker://41a48c026c4ac59be1c0ac5a2a1104686d3dfdd8915a679d97a323c089960580
    Image:          nginx:latest
    Image ID:       docker-pullable://nginx@sha256:fc66cdef5ca33809823182c9c5d72ea86fd2cef7713cf3363e1a0b12a5d77500
    Port:           <none>
    Host Port:      <none>
    State:          Running
      Started:      Thu, 08 Oct 2020 14:08:28 +0000
    Ready:          True
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/log/nginx from shared-logs (rw)
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-wms2v (ro)
  sidecar-container:
    Container ID:  docker://716493e77d469a421a1cae0e52fb938248ee12daf282bf1d4ca637e48841070d
    Image:         ubuntu:latest
    Image ID:      docker-pullable://ubuntu@sha256:bc2f7250f69267c9c6b66d7b6a81a54d3878bb85f1ebb5f951c896d13e6ba537
    Port:          <none>
    Host Port:     <none>
    Command:
      /bin/sh
    Args:
      -c
      while true; do cat /var/log/nginx/access.log /var/log/nginx/error.log; sleep 30; done
    State:          Running
      Started:      Thu, 08 Oct 2020 14:08:39 +0000
    Ready:          True
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/log/nginx from shared-logs (rw)
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-wms2v (ro)
Conditions:
  Type              Status
  Initialized       True
  Ready             True
  ContainersReady   True
  PodScheduled      True
Volumes:
  shared-logs:
    Type:       EmptyDir (a temporary directory that shares a pod's lifetime)
    Medium:
    SizeLimit:  <unset>
  default-token-wms2v:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  default-token-wms2v
    Optional:    false
QoS Class:       BestEffort
Node-Selectors:  <none>
Tolerations:     node.kubernetes.io/not-ready:NoExecute for 300s
                 node.kubernetes.io/unreachable:NoExecute for 300s
Events:
  Type    Reason     Age   From               Message
  ----    ------     ----  ----               -------
  Normal  Scheduled  46s   default-scheduler  Successfully assigned default/webserver to node01
  Normal  Pulling    45s   kubelet, node01    Pulling image "nginx:latest"
  Normal  Pulled     39s   kubelet, node01    Successfully pulled image "nginx:latest"
  Normal  Created    37s   kubelet, node01    Created container nginx-container
  Normal  Started    37s   kubelet, node01    Started container nginx-container
  Normal  Pulling    37s   kubelet, node01    Pulling image "ubuntu:latest"
  Normal  Pulled     27s   kubelet, node01    Successfully pulled image "ubuntu:latest"
  Normal  Created    27s   kubelet, node01    Created container sidecar-container
  Normal  Started    26s   kubelet, node01    Started container sidecar-container
thor@jump_host /$ kubectl logs pod webserver -c nginx-container
Error from server (NotFound): pods "pod" not found
thor@jump_host /$ kubectl logs pods webserver -c nginx-container
Error from server (NotFound): pods "pods" not found
thor@jump_host /$ kubectl logs webserver -c nginx-container
/docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
/docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
/docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
10-listen-on-ipv6-by-default.sh: Getting the checksum of /etc/nginx/conf.d/default.conf
10-listen-on-ipv6-by-default.sh: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
/docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
/docker-entrypoint.sh: Configuration complete; ready for start up
thor@jump_host /$ kubectl logs webserver -c sidecar-container
thor@jump_host /$ kubectl logs webserver
error: a container name must be specified for pod webserver, choose one of: [nginx-container sidecar-container]
thor@jump_host /$ kubectl get deploy
No resources found in default namespace.
thor@jump_host /$

thor@jump_host /$ cat pod.yml
apiVersion: v1
kind: Pod
metadata:
  name: webserver
spec:
  volumes:
  - name: shared-logs
    emptyDir: {}

  containers:

  - name: nginx-container
    image: nginx:latest
    volumeMounts:
    - name: shared-logs
      mountPath: /var/log/nginx

  - name: sidecar-container
    image: ubuntu:latest
    volumeMounts:
    - name: shared-logs
      mountPath: /var/log/nginx
    command: ["/bin/sh"]
    args: ["-c", "while true; do cat /var/log/nginx/access.log /var/log/nginx/error.log; sleep 30; done"]
thor@jump_host /$

thor@jump_host /$ cat pod.yml 
apiVersion: v1
kind: Pod
metadata:
  name: webserver
spec:
  volumes:
  - name: shared-logs
    emptyDir: {}
  containers:
  - name: nginx-container
    image: nginx:latest
    volumeMounts:
    - name: shared-logs
      mountPath: /var/log/nginx
  - name: sidecar-container
    image: ubuntu:latest
    command: ["/bin/sh"]
    args: ["-c","while true; do cat /var/log/nginx/access.log /var/log/nginx/error.log; sleep 30; done"]
    volumeMounts:
    - name: shared-logs
      mountPath: /var/log/nginx

thor@jump_host /$ 
 