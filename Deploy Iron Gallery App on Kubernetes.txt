There is iron gallery app the xfusion xfusion team was developing. They have recently customized the app and going to deploy the same on the Kubernetes cluster. Below you can find more details:


Create a namespace iron-namespace-xfusion

kubectl create namespace iron-namespace-xfusion

Create a deployment iron-gallery-deployment-xfusion for iron gallery under the same namespace you created.

:- Labels run should be iron-gallery.

:- Replicas count should be 1.

:- Selector's matchLabels run should be iron-gallery.

:- Template labels run should be iron-gallery under metadata.

:- The container should be named as iron-gallery-container-xfusion, use kodekloud/irongallery:2.0 image ( use exact image name / tag ).

:- Resources limits for memory should be 100Mi and for CPU should be 50m.

:- First volumeMount name should be config, its mountPath should be /usr/share/nginx/html/data.

:- Second volumeMount name should be images, its mountPath should be /usr/share/nginx/html/uploads.

:- First volume name should be config and give it emptyDir and second volume name should be images, also give it emptyDir.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: iron-gallery-deployment-xfusion
  namespace: iron-namespace-xfusion
  labels:
    run: iron-gallery
spec:
  replicas: 1
  selector:
    matchLabels:
      run: iron-gallery
  template:
    metadata:
      labels:
        run: iron-gallery
    spec:
      containers:
      - name: iron-gallery-container-xfusion
        image: kodekloud/irongallery:2.0
        resources:
          limits:
            memory: "100Mi"
            cpu: "50m"
        volumeMounts:
        - name: config
          mountPath: /usr/share/nginx/html/data
        - name: images
          mountPath: /usr/share/nginx/html/uploads
    volumes:
    - name: config
      emptyDir: {}
    - name: images
      emptyDir: {}



Create a deployment iron-db-deployment-xfusion for iron db under the same namespace.

:- Labels db should be mariadb.

:- Replicas count should be 1.

:- Selector's matchLabels db should be mariadb.

:- Template labels db should be mariadb under metadata.

:- The container name should be iron-db-container-xfusion, use kodekloud/irondb:2.0 image ( use exact image name / tag ).

:- Define environment, set MYSQL_DATABASE its value should be database_web, set MYSQL_ROOT_PASSWORD and MYSQL_PASSWORD value should be 
with some complex passwords for DB connections, and MYSQL_USER value should be any custom user ( except root ).

:- Volume mount name should be db and its mountPath should be /var/lib/mysql. Volume name should be db and give it an emptyDir.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: iron-db-deployment-xfusion
  namespace: iron-namespace-xfusion
  labels:
    db: mariadb
spec:
  replicas: 1
  selector:
    matchLabels:
      db: mariadb
  template:
    metadata:
      labels:
        db: mariadb
    spec:
      containers:
      - name: iron-db-container-xfusion
        image: kodekloud/irondb:2.0
        env:
        - name: MYSQL_DATABASE
          value: database_web
        - name: MYSQL_ROOT_PASSWORD
          value: Test@123
        - name: MYSQL_PASSWORD
          value: Date@123
        - name: MYSQL_USER
          value: dbuser
        volumeMounts:
        - name: db
          mountPath: /var/lib/mysql
      volumes:
      - name: db
        emptyDir: {}


Create a service for iron db which should be named as iron-db-service-xfusion under the same namespace. Configure spec as selector's db should be mariadb. Protocol should be TCP,
 port and targetPort should be 3306 and its type should be ClusterIP.

apiVersion: v1
kind: Service
metadata:
  name: iron-db-service-xfusion
  namespace: iron-namespace-xfusion
spec:
  type: ClusterIP
  selector:
    db: mariadb
  ports:
  - protocol: TCP
    targetPort: 3306
    port: 3306

Create a service for iron gallery which should be named as iron-gallery-service-xfusion under the same namespace. Configure spec as selector's run should be iron-gallery. Protocol should be TCP, port and targetPort 
should be 80, nodePort should be 32678 and its type should be NodePort.
apiVersion: v1
kind: Service
metadata:
  name: iron-gallery-service-xfusion
  namespace: iron-namespace-xfusion
spec:
  type: NodePort
  selector:
    run: iron-gallery
  ports:
  - protocol: TCP
    targetPort: 80
    port: 80
    nodePort: 32678
Note:

We don't need to make connection b/w database and front-end as of now, if installation page is coming up it should be enough for now.

The kubectl on jump_host has been configured to work with the kubernetes cluster.


thor@jump_host /$ cat deploy.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iron-gallery-deployment-xfusion
  namespace: iron-namespace-xfusion
  labels:
    run: iron-gallery
spec:
  replicas: 1
  selector:
    matchLabels:
      run: iron-gallery
  template:
    metadata:
      labels:
        run: iron-gallery
    spec:
      containers:
      - name: iron-gallery-container-xfusion
        image: kodekloud/irongallery:2.0
        resources:
          limits:
            memory: "100Mi"
            cpu: "50m"
        volumeMounts:
        - name: config
          mountPath: /usr/share/nginx/html/data
        - name: images
          mountPath: /usr/share/nginx/html/uploads
      volumes:
      - name: config
        emptyDir: {}
      - name: images
        emptyDir: {}
thor@jump_host /$ cat deploy1.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iron-db-deployment-xfusion
  namespace: iron-namespace-xfusion
  labels:
    db: mariadb
spec:
  replicas: 1
  selector:
    matchLabels:
      db: mariadb
  template:
    metadata:
      labels:
        db: mariadb
    spec:
      containers:
      - name: iron-db-container-xfusion
        image: kodekloud/irondb:2.0
        env:
        - name: MYSQL_DATABASE
          value: database_web
        - name: MYSQL_ROOT_PASSWORD
          value: Test@123
        - name: MYSQL_PASSWORD
          value: Date@123
        - name: MYSQL_USER
          value: dbuser
        volumeMounts:
        - name: db
          mountPath: /var/lib/mysql
      volumes:
      - name: db
        emptyDir: {}

thor@jump_host /$ cat svc.yml
apiVersion: v1
kind: Service
metadata:
  name: iron-db-service-xfusion
  namespace: iron-namespace-xfusion
spec:
  type: ClusterIP
  selector:
    db: mariadb
  ports:
  - protocol: TCP
    targetPort: 3306
    port: 3306
thor@jump_host /$ cat svc1.yml
apiVersion: v1
kind: Service
metadata:
  name: iron-gallery-service-xfusion
  namespace: iron-namespace-xfusion
spec:
  type: NodePort
  selector:
    run: iron-gallery
  ports:
  - protocol: TCP
    targetPort: 80
    port: 80
    nodePort: 32678
thor@jump_host /$

hor@jump_host /$ kubectl get deploy -n iron-namespace-xfusion
NAME                              READY   UP-TO-DATE   AVAILABLE   AGE
iron-db-deployment-xfusion        1/1     1            1           4m40s
iron-gallery-deployment-xfusion   1/1     1            1           5m48s
thor@jump_host /$ kubectl get svc -n iron-namespace-xfusion
NAME                           TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)        AGE
iron-db-service-xfusion        ClusterIP   10.109.220.219   <none>        3306/TCP       3m37s
iron-gallery-service-xfusion   NodePort    10.99.4.17       <none>        80:32678/TCP   2m26s
thor@jump_host /$ kubectl get pods -n iron-namespace-xfusion
NAME                                               READY   STATUS    RESTARTS   AGE
iron-db-deployment-xfusion-5cb7cf88f5-gnwf7        1/1     Running   0          4m54s
iron-gallery-deployment-xfusion-56f9c5679d-cr9nf   1/1     Running   0          6m2s